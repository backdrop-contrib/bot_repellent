<?php

/**
 * @file
 * Add Robots header tag settings to search and metadata administration.
 */

/**
 * Implements hook_config_info();
 */
function bot_repellent_config_info() {
  $prefixes = array();
  $prefixes['bot_repellent.settings'] = array(
    'group' => t('Configuration'),
    'label' => t('Bot repellent settings'),
  );
  return $prefixes;
}

/**
 * Implements hook_perm().
 */
function bot_repellent_permission() {
  return array(
    'administer bot repellent' => array(
      'title' => t('Administer bot repellent'),
      'description' => t('Configure X-Robots-Tag HTTP headers.'),
      'restrict access' => TRUE,
      'warning' => t('Misconfiguration of this module could prevent this website from being indexed by search engines.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function bot_repellent_menu() {
  $items = array();

  $items['admin/config/search/bot_repellent'] = array(
    'title' => 'Bot repellent',
    'description' => 'Set site-wide, global values for X-Robots-Tag HTTP headers.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('bot_repellent_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer bot repellent'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'bot_repellent.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_boot().
 */
function bot_repellent_boot() {
  $robot_tags = config_get('bot_repellent.settings', 'tags');
  foreach ($robot_tags as $key => $value) {
    if (!empty($value)) {
      $tag_keys[] = $key;
    }
  }
  $tag_string = implode($tag_keys, ', ');
  backdrop_add_http_header('X-Robots-Tag', $tag_string);
}
